<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F07%2F27%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AC%AC7%E7%89%88-%E8%B0%A2%E5%B8%8C%E4%BB%81-%E7%AC%AC%E4%B8%80%E7%AB%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[title: 计算机网络(第7版)_谢希仁_第一章_笔记date: 2019-07-27 16:34:08categories: “计算机网络”tags: - 笔记description: 《计算机网络》(第7版)_谢希仁comments:password: lifuquan 本课程重要概念：计算机网络的体系结构。 本章重要内容： 互联网边缘部分和核心部分的作用，其中包含分组交换的概念。 计算机网络的性能指标。 计算机网络分层次的体系结构，包含协议和服务的概念。 计算机网络在信息时代中的作用 互联网两个重要基本特点：连通性和共享。 互联网概述网络的网络 计算机网络(简称网络)由若干结点(node)和连接这些节点的链路(link)组成。网络之间通过路由器互连起来，构成一个覆盖范围更大的计算机网络，成为互连网(“网络的网络”)。 网络把许多计算机连接在一起，互连网把许多网络通过路由器连接在一起。与网络相连的计算机常称为主机。 互联网基础结构发展的三个阶段 一阶段是从单个网络ARPANET向互连网发展的过程。 1983年TCP/IP协议成为ARPANET上的标准协议，使得所有使用TCP/IP协议的计算机都能利用互连网相互通信，因而将1983年作为互联网的诞生时间。所以互联网Internet前身为美国的ARPANET。 二阶段特点是建成了三级结构的互联网。 三级计算机网络分为主干网、地区网和校园网(企业网)。 三阶段特点是逐渐形成多层次ISP结构的互联网。 互联网服务提供商(Internet Service Provider)。 互联网交换点IXP(Internet eXchange Point)：主要作用是允许两个网络直接相连并交换分组，而不再需要通过第三个网络来转发分组。由此可以更快地转发分组，更加有效地利用网络资源。 互联网的标准化工作 互联网的组成互联网可分为两部分： ​ -边缘部分。由所有连接在互联网上的主机组成，用户直接使用。 ​ -核心部分。由大量网络和路由器组成，为边缘部分提供服务。 互联网的边缘部分端系统(边缘部分主机又称)之间的通信方式分为两大类：客户-服务器方式(C/S 方式)和对等方式(P2P 方式)。 客户-服务器方式对等方式 (client/server) ​ 客户(client)是服务请求方，服务器(server)是服务提供方。 客户程序： ​ 1.被用户调用后运行，在通信时主动向远地服务器发起通信。须知道服务器程序地址。 ​ 2.不需要特殊的硬件和很复杂的操作系统。 服务器程序： ​ 1.是一种专门用来提供某种服务的程序，可同时处理多个客户请求。 ​ 2.不需知道客户程序地址。 ​ 3.一般有强大的硬件和高级的操作系统支持。(peer-to-peer) 双方进行平等的、对等连接通信。 本质上看仍然是使用C/S方式，只是主机既是客户又同时是服务器。 互联网的核心部分在核心部分起特殊作用的是路由器，它是实现分组交换的关键构件，任务是转发收到的分组。 分组交换采用存储转发技术。将数据分段为多个更小的等长数据段，在数据段前面添加首部，构成分组，又称”包”，首部又称”包头”。 分组交换的优点： ​ 1.高效。在分组传输的过程中动态分配传输带宽，对通信链路逐段占用 ​ 2.灵活。为每个分组独立地选择最合适的转发路由 ​ 3.迅速。以分组作为传送单位，可以先不建立连接就能发送分组 ​ 4.可靠。分布式多路由的分组交换网 分组交换的问题：时延与开销。 电路交换适合于数据量很大的实时性传输。 计算机网络在我国的发展中国1994年4月20日用一条64kbit/s专线正式连入互联网。 事件： ​ 1996年张朝阳创立爱特信公司，推出”搜狐” ​ 1997年丁磊创立网易公司 ​ 1998年王志东创立新浪网站 ​ 1998年马化腾+张志东创立腾讯公司 ​ 1999年马云创立阿里巴巴网站 ​ 2000年李彦宏+徐勇创建百度网站 计算机网络的类别计算机网络的定义目前较好的定义：计算机网络主要是由一些通用的、可编程的硬件互连而成的，而这些硬件并非专门用来实现某一特定目的。 几种不同类别的计算机网络 计算机网络的性能计算机网络的性能指标速率网络技术中的速率指的是数据的传送速率，也成为数据率(data rate)或比特率(bit rate)。单位是 bit/s(或 b/s ,有时也写为 bps，即 bit per second)。 k = 103 = 千；M = 106 = 兆； G = 109 = 吉；T = 1012 = 太；P = 1015 = 拍；… 网络的速率指额定速率或标称速率。 带宽一条通信链路的”带宽”越宽，其所能传输的”最高数据率”越高。 意义1意义2本来是指某个信号具有的频带宽度。这种意义下的带宽的单位是赫(或千赫、兆赫、吉赫等)。 表示某信道允许通过的信号频带范围就成为该信道的带宽(或通频带)。在计算机网络中，带宽用来表示网络中某通道传送数据的能力，因此网络带宽表示在单位时间内网络中某信道所能通过的”最高数据率”。该意义下带宽单位是 bit/s。 吞吐量单位时间内通过某个网络(或信道、接口)的实际的数据量。 受网络带宽或网络额定速率限制。 时延数据从网络(或链路)的一端传送到另一端所需的时间。有时也称为延迟或迟延。 时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延 一条通信链路的”带宽”越宽，其所能传输的”最高数据率”越高。 发送时延传播时延处理时延排队时延主机或路由器发送数据帧所需要的时间。又称传输时延。$$发送时延 = \frac{数据帧长度(bit)}{发送速率(bit/s)}$$电磁波在信道中传播一定距离需要花费的时间。$$传播时延 = \frac{信道长度(m)}{电磁波在信道上的传播速率(m/s)}$$1000km唱的光纤线路产生的传播时延大约为5ms。主机或路由器在收到分组时要花费一定时间进行处理从而产生的时延。分组在经过网络传输时，要经过许多路由器。但分组在进入路由器后要先在输入队列中排队等待处理。在路由器确定了转发接口后，还要在输出队列中排队等待转发。由此产生的时延。 时延带宽积$$时延带宽积 = 传播时延 * 带宽$$ 链路的时延带宽积又称为以比特为单位的链路长度。 往返时间RTT$$发送时间 = \frac{数据长度}{发送速率}$$ $$有效数据率 = \frac{数据长度}{发送时间 + RTT}$$ 往返时间还包括中间结点处理时延、排队时延、转发数据的发送时延。 利用率信道利用率网络利用率信道利用率指出某信道有百分之几的时间是被利用的(有数据通过)。 信道利用率并非越高越好：当某信道的利用率增大时，其引起的时延也迅速增加。网络利用率是全网络的信道利用率的加权平均值。 $$网络当前时延 = \frac{网络空闲时的时延}{1 - 网络的利用率}$$ 计算机网络的非性能特征费用 质量 标准化 可靠性 可扩展性和可升级性 易于管理和维护 计算机网络体系结构计算机网络体系结构的形成协议与划分层次为进行网络中的数据交换而建立的规则、标准或约定成为网络协议，简称协议。 网络协议由三个要素组成：语法；语义；同步。 分层结构好处： 各层之间是独立的。 灵活性好。 结构上可分隔开。 易于实现和维护。 能促进标准化工作。 各层要完成的功能： 差错控制 流量控制 分段和重装 复用和分用 连接建立和释放 计算机网络的体系结构就是这个计算机网络及其构件所应完成的功能的精确定义。 具有五层协议的体系结构(五层协议的体系结构只是为介绍网络原理而设计，实际应用TCP/IP是四层体系结构) 应用层运输层网络层数据链路层物理层(application layer) 任务是通过应用进程间的交互来完成特定的网络应用。 应用层协议定义的是应用进程间通信和交互的规则。 应用层交互的数据单元成为报文(message)。(transport layer) 任务是负责向两台主机中进程之间的通信提供通用的数据传输服务。 运输层主要用两种协议：传输控制协议TCP与用户数据报协议UDP。 传输控制协议用户数据报协议(Transmission Control Protocol) 提供面向连接的、可靠的数据传输服务，数据传输单位是报文段。(User Datagram Protocol) 提供无连接的、尽最大努力的数据传输服务(不保证可靠性)，数据传输单位是用户数据报。(network layer) 任务是为分组交换网上的不同主机提供通信服务。 分组也被称为IP数据报，或简称数据报。 网络层又称网际层或IP层。(data link layer) 常简称为链路层。 在两个相邻结点间传送数据时，数据链路层将网络层交下来的IP数据报组装成帧，再在链路上传送帧。物理层上所传数据的单位是比特。 考虑多大电压代表”1”或”0”， 还要确定连接电缆的插头有多少根引脚以及引脚的连接方式。 实体、协议、服务和服务访问点实体表示任何可发送或接收信息的硬件或软件进程。 协议是控制两个对等实体(或多个实体)进行通信的规则的集合。 在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务，要实现本层协议，还要使用下面一层所提供的的服务。 在同一系统中相邻两层的实体进行交互的地方，同城成为服务访问点SAP。实际上是个逻辑接口。 TCP/TP的体系结构TCP/IP可以为各式各样的应用提供服务 TCP/IP允许IP协议在各式各样的网络构成的互联网上运行 章节重要概念 计算机网络(可简称为网络)把许多计算机连接在一起，而互连网则把许多网络连接在一起，是网络的网络。 以小写字母i开始的internet(互连网)是通用名词，泛指由多个计算机网络互连而成的网络。在这些网络之间的通信协议可以是任意的。 以大写字母I开始的Internet(互联网)是专用名词，指当前全球最大的、开放的、且由众多网络相互连接而成的特定互连网，采用TCP/IP协议族作为通信规则，前身是美国的ARPANET。 互联网现在采用存储转发的分组交换技术，以及三层ISP结构。 互联网按工作方式可划分为边缘部分与核心部分。主机在网络的边缘部分，其作用是信息处理。路由器在网络的核心部分，作用是按存储转发方式进行分组交换。 计算机通信是计算机中的进程之间的通信。计算机网络采用的通信方式是客户-服务器方式和对等连接方式。 客户和服务器都是指通信中所涉及的应用进程。客户是服务请求方，服务器是服务提供方。 按作用范围的不同，计算机网络分为广域网WAN、城域网MAN、局域网LAN和个人区域网PAN。 计算机网络最常用的性能指标是：速率、带宽、吞吐量、时延(发送时延、传播时延、处理时延、排队时延)、时延带宽积、往返时间和信道(或网络)利用率。 网络协议即协议，是为进行网络中的数据交换而建立的规则。计算机网络的各层及其协议的集合，称为网络的体系结构。 五层协议的体系结构由应用层、运输层、网络层(或网际层)、数据链路层和物理层组成。运输层最重要的协议是TCP和UDP协议，而网络层最重要的协议是IP协议。]]></content>
  </entry>
  <entry>
    <title><![CDATA[设计模式]]></title>
    <url>%2F2019%2F07%2F27%2F%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[设计模式简介课程目标 理解松耦合设计思想 掌握面向对象设计原则 掌握重构技法改善设计 掌握GOF核心设计模式 什么是设计模式 每一个设计模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案核心。这样，你就能一次又一次地使用该方案而不必做重复劳动。 ——Christopher Alexander 推荐书籍 从面向对象谈起底层思维抽象思维向下，如何把握机器低层从微观理解对象构造 语言构造 编译转换 内存模型 运行时机制 向上，如何将我们的周围世界抽象为程序代码 面向对象 组件封装 设计模式 架构模式 软件设计复杂的根本原因以及解决根本原因： 客户需求的变化 技术平台的变化 开发团队的变化 市场环境的变化 …… 解决： ​ 分解：分而治之，将大问题分解为多个小问题。 ​ 抽象：选择忽视非本质细节，处理泛化和理想化了的对象模型。 软件设计的目标复用]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C/C++编程规范]]></title>
    <url>%2F2019%2F07%2F26%2FC-C-%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[文件结构&#160; &#160; &#160; &#160;每个C/C++程序通常分两个文件：一个是用于保存程序的声明，称为头文件，以”.h“为后缀；另一个是保存程序的实现，称为定义，通常以”.cpp“为后缀(个别系统以”.cc“或”.cxx“为后缀；C程序以”.c“为后缀)。 版权和版本的声明声明位于头文件和定义文件的开头，包括： ​ 1.版权信息 ​ 2.文件名称，标识符，摘要 ​ 3.当前版本号，作者，修改者，完成日期 ​ 4.版本历史信息 12345678910111213141516171819/*Copyright (c) 2019. 樱落成雪的博客ALL rights reserved.文件名称：C/C++编程规范.md文件标识：摘要：有关C语言和C++的部分编程规范*/……代码…………代码……/*当前版本：1.1.0作者：Snowakura完成日期：2019.07.27原版本：原作者：原完成日期：*/ 版本标识：&lt;主版本号&gt;.&lt;次版本号&gt;.&lt;修订号&gt; Liunx核心约定：如果次版本号是偶数则代表正式版本，若为奇数则代表该版本为开发过程中的测试版本修订号则相当于Build号 头文件的结构头文件由三部分组成： ​ 1.头文件开头处的版权和版权声明(详见1.1) ​ 2.预处理块 ​ 3.函数和类结构声明 规则建议为了防止头文件被重复引用，应当用idndef/define/endif结构产生预处理块 用#include &lt;filename.h&gt;格式引用标准库的头文件 用#include “filename.h”格式引用非标准库(用户自定义)的头文件头文件只存放声明而不存放定义 不提倡使用全局变量，尽量不在头文件中出现extern int value 这类声明 定义文件的结构定义文件由三部分组成： ​ 1.定义文件开头处的版权和版权声明(详见1.1) ​ 2.对头文件的引用 ​ 3.程序具体实现 目录结构如果头文件数目较多，应将头文件与定义文件分开保存以便维护。 如果部分文件为私有文件，则可以将其存放于另外的同一个目录下。 程序版式空行规则在每个类声明、函数定义结束之后都要加空行 在一个函数体内，逻辑上密切相关的语句之间不加空行，其他地方加空行分隔 12345678910111213141516171819undefinedwhile (condition)&#123; statement-listA; ​ if (condition)​ &#123;​ statement-listB;​ &#125;​ statement-listC;&#125; 代码行规则建议一行代码只做一件事情，只定义一个变量或只写一条语句 if, for, while, do 等语句自占一行，执行语句加{}防止书写失误 undefined尽可能在定义变量的同时初始化该变量 undefined 代码行内的空格规则建议关键字之后要留空格，函数名之后不留空格以和关键字区别 ‘(’ 向后紧跟， ‘)’ ’,‘ ’;’ 向前进跟，紧跟不留空格 ‘,’ 之后要留空格，如果 ‘;’ 不是一行的结束则后留空格 二元操作符前后加空格，一元操作符前后不加空格，’[]’ ‘.’ ‘-&gt;’ 前后不加空格 undefined对于表达式比较长的for语句和if语句，为了紧凑起见可以适当去掉一些空格 undefined 对齐规则程序分界符 ‘{}’ 应该独占一行且位于同一列，同时与引用他们的语句左对齐 ‘{}’ 之内的代码块在 ‘{‘ 右边数格处左对齐 undefined 长行拆分规则代码行最大长度应控制在70~80个字符之内，不宜过长 长表达式在低优先级操作符处拆分成新行，操作符放在新行之首，拆分出新行应适当缩进 undefined 修饰符的位置规则修饰符 ‘*’ 和 ‘&amp;’ 紧靠变量名 undefined 注释规则注释不可过多，注释只是对代码的提示而不是文档 若代码本来就是易懂的则不需再加注释 边写代码边注释，修改代码的同时修改注释，以保证其一致性 尽量避免在注释中使用缩写 注释的位置应与被描述代码相邻，可上可右不可下 当代码比较长，尤其有多重嵌套时，应在一些段落结束处适当添加注释 类的版式 &#160; &#160; &#160;&#160;&#160;类提供关键字public、protected、private，分别用于声明哪些数据和函数是共有的、受保护的、私有的。让类仅仅公开必须要让外界知道的内容，而隐藏其它一切内容。 类的版式主要有两种方式： ​ 1.将private类型的数据写在前面，将public类型的函数写在后面。该类主张类的设计“以数据为中心”，重点关注类的内部结构。 ​ 2.将public类型的函数写在前面，将private类型的数据写在后面。该类主张类的设计”以行为为中心“，重点关注类提供什么接口。 建议建议采用“以行为为中心”的书写方式，即首先考虑类应该提供什么样的函数，这样做不仅让自己在设计类时思路清晰，而且方便别人阅读。 undefined 命名规则]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
        <tag>规范</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
